*&---------------------------------------------------------------------*
*& Include          ZEDU20_25F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form INIT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*

FORM INIT .
**초기값 생성
**화면이 뜨기 전에 변수에 넣어짐.

P_YEAR = SY-DATUM(04) - 1. "4자리만 가져옴, 연산도 가능함.

P_DISP = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F4_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- P_FILE
*&---------------------------------------------------------------------*
FORM F4_FILE  CHANGING PV_FILE.

* - PREFIX 정의 - FORM PARAMETER
*   1. PT_  : Internal Table or Ranges
*   2. PS_  : Structure
*   3. PV_  : Variables
*   4. PR_ : Reference Variables

  DATA: LT_FILE_TABLE TYPE FILETABLE,    "테이블 타입은 테이블을 만들때 타입을 사용해서 할 수 있음. 스트럭처를 사용해서 테이블을 만들때도 스트럭처에서 테이블타입을 만든 다음에 테이블을 만드는 형식
        LS_FIEL_TABLE TYPE FILE_TABLE.

  DATA: LV_SUBRC  TYPE I,
        LV_ACTION TYPE I.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG "창을 띄우는 것.
    EXPORTING
      WINDOW_TITLE            = 'File Path' "윈도우  이름.
      DEFAULT_FILENAME        = ''
      FILE_FILTER             =
                                'Excel files (*.XLSX)|*.XLSX| Excel files (*.XLS)|*.XLS| ' "파일 형식, 지금은 엑셀
*      Excel files (*.XLS)|*.XLS| Excel files (*.XLSX)|*.XLSX|'
      INITIAL_DIRECTORY       = 'C:\' "처음 뜨는 폴더
      MULTISELECTION          = ' ' "중복 올리기
    CHANGING
      FILE_TABLE              = LT_FILE_TABLE "선택한 파일 경로 이름
      RC                      = LV_SUBRC     "에러가 맞냐 아니냐
      USER_ACTION             = LV_ACTION    "열기 취소버튼                                우리가 받을 값들.
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1 "오류들 정의
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3.   "창 띄우는 것.

  CALL METHOD CL_GUI_CFW=>FLUSH.

  CASE LV_ACTION. "  OK면 0, 캔슬이면 9.

    WHEN  CL_GUI_FRONTEND_SERVICES=>ACTION_OK. "OK를 눌렀나, 캔슬을 눌렀나

      READ TABLE LT_FILE_TABLE INDEX 1 INTO LS_FIEL_TABLE.
      PV_FILE = LS_FIEL_TABLE.

    WHEN CL_GUI_FRONTEND_SERVICES=>ACTION_CANCEL.
      EXIT.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCELUPLOAD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCELUPLOAD .

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE' "엑셀의 내용을 가져오는 펑션
    EXPORTING
      FILENAME                = P_FILE
      I_BEGIN_COL             = 1         "Excel file start col     "엑셀은 컬럼과 로우로 되어 있음.
      I_BEGIN_ROW             = 2         "Excel file start row  " 시작하는 세로값, 첫번째는 필드가 나오기 때문에
      I_END_COL               = 100                                       "오른쪽으로 100번째 까지
      I_END_ROW               = 50000                                 "세로로 50000번째 까지 가져옴.
    TABLES
      INTERN                  = GT_INTERN                            "엑셀에서 읽은 데이터를 인터널 테이블로 가져옴
                                                                                    "ROW COL VALUE식으로 이루어져 있음. 값은 읽는 형태
    EXCEPTIONS
      INCONSISTENT_PARAMETERS = 1 "0이 아닌 값들을 정의 예외처리
      UPLOAD_OLE              = 2
      OTHERS                  = 3.

  IF SY-SUBRC <> 0. "not equel
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  "스텐다드 메세지, 굳이 없어도 됨.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_IT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_IT_DATA .

  DESCRIBE TABLE GT_INTERN LINES SY-TFILL. "인터널 테이블의 데이터 건수를 읽음. 시스템 변수, 인터널 테이블의 로우 개수
                                                                            "현재 개수는 20, 값들을 하나씩 들고옴.

  IF SY-TFILL EQ 0. "가져온 개수가 0이냐? 데이터가 없냐?
    MESSAGE S012 WITH TEXT-M01. " 만들어진 데이터가 없음.
    GV_ERROR = ABAP_TRUE. " 에러라고 찍어줌
    EXIT.
  ELSE.

*-- Excel file -> itab
    PERFORM EXCEL_TO_ITAB.

ENDIF.
ENDFORM.

*&---------------------------------------------------------------------*
*& Form EXCEL_TO_ITAB
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCEL_TO_ITAB .

  DATA: LS_DBTAB TYPE ZEDU20_EX5TA.
  DATA: LT_DBTAB LIKE TABLE OF LS_DBTAB.

  DATA: LS_EX5TA TYPE ZEDU20_EX5TA. "스트럭쳐

  FIELD-SYMBOLS: <FS_COL>.

  CLEAR: GS_DATA,    GT_DATA.

  LOOP AT GT_INTERN.

*    ADD 1 TO GT_INTERN-COL.

    ASSIGN COMPONENT GT_INTERN-COL OF STRUCTURE "INTERN-COL 필드의 순서를 의미함. GT_DATA의 1, 2, 3, 4번째  필드
                                   GS_DATA TO <FS_COL>. "

    <FS_COL> = GT_INTERN-VALUE.
    "t_data-zyear = GT_INTERN-VALUE. 컬럼값이 2가 됨.

    AT END OF ROW. "ROW라는 필드가 끝날 때(반복되는 것이 끝날 때) 로우의 값이 바뀌기 전, 그때 어펜드가 됨. 키 값들은 바뀌지 않아야 함.
     "무저건 소팅이 되어 있어야 하며, 다음값을 체크함.
      APPEND GS_DATA TO GT_DATA.
      CLEAR  GS_DATA.
    ENDAT.

  ENDLOOP.

" 값이 테이블 형식으로 들어갔음.

  LOOP AT GT_DATA INTO GS_DATA.    "헤더가 첫번재부터 돌아감.
    MOVE-CORRESPONDING GS_DATA TO LS_DBTAB. "gt테이블 헤더에서 LT테이블 헤더로 옮겨줌.

    SELECT SINGLE *                                   "체킹, 기존의 키값으로 동일한 키값이 있냐 없냐, 싱글로 하면 하나만 들고옴, 스트록쳐로 사용 가능
      INTO LS_EX5TA
      FROM ZEDU20_EX5TA
    WHERE ZYEAR EQ LS_DBTAB-ZYEAR
         AND SNO EQ LS_DBTAB-SNO.
    IF SY-SUBRC EQ 0.
      LS_DBTAB-ERDAT = LS_EX5TA-ERDAT.
      LS_DBTAB-ERNAM = LS_EX5TA-ERNAM.
      LS_DBTAB-ERTIM = LS_EX5TA-ERTIM.
      LS_DBTAB-AEDAT = SY-DATUM.            "동일할시
      LS_DBTAB-AENAM = SY-UNAME.
      LS_DBTAB-AETIM = SY-UZEIT.
    ELSE.
      LS_DBTAB-ERDAT = SY-DATUM.  "시스템 날자
      LS_DBTAB-ERNAM = SY-UNAME.  " 유저아이디
      LS_DBTAB-ERTIM = SY-UZEIT.    "생성된 시간.
      LS_DBTAB-AEDAT = SY-DATUM.    "수정정보들. 수정된 날짜
      LS_DBTAB-AENAM = SY-UNAME.   "수정된 아이디
      LS_DBTAB-AETIM = SY-UZEIT.     "수정된 생성.
    ENDIF.

    APPEND LS_DBTAB TO LT_DBTAB.
    CLEAR LS_DBTAB.

  ENDLOOP.

  DESCRIBE TABLE GT_DATA LINES GV_CNT.

  MODIFY ZEDU20_EX5TA FROM TABLE LT_DBTAB.
  "모디파이는 인설트+업데이트임. 키에 값이 있으면 업데이트, 없으면 인설트 됨.


"디비에 있는 테이블에 값을 넣을려면 형태가 똑같아야함. 테이블 타입이 정확히 일치해야함.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SELECT_DATA
*&---------------------------------------------------------------------*
FORM SELECT_DATA .
     CLEAR: GT_DATA, GS_DATA.

     SELECT *
       INTO CORRESPONDING FIELDS OF TABLE GT_DATA "테이블에 바로 넣어줌.
       FROM ZEDU20_EX5TA
       WHERE  ZYEAR EQ P_YEAR
       AND IMDATE IN S_IMDATE.


       CLEAR  GV_ERROR.
       IF GT_DATA[] IS INITIAL.
         GV_ERROR = 'X'.
         MESSAGE S001 DISPLAY LIKE 'E'.
         EXIT.
         ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_INSTANCE_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_INSTANCE_0100 .

  CREATE OBJECT GR_CON1 "컨테이너 만들기 우리가 만든 컨테이너를 GR_CON1에 담는 것.
    EXPORTING
      CONTAINER_NAME = GV_CONTAINER. "USER가 정의한 CONTAINER GV_CONTAINER = CT_0100 이렇게 해도 똑같음.

  CREATE OBJECT GR_GRID1 "그리드 만들기
    EXPORTING
      I_PARENT = GR_CON1. " 그리드는 항상 컨테이너 위에 올라감. 업어주는 형상.
"컨테이너
"그리드가 자식 클래스

ENDFORM.
*&---------------------------------------------------------------------*
*& Form APPEND_FIELDCAT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM APPEND_FIELDCAT_0100 .


  "-- field catalog data
  "   field catalog merge or set fieldcatalog를 사용할 수 있음.

  "{ FIELDCATLOG MERGE 사용
  PERFORM GET_FIELDCATLOG_DATA.

  PERFORM MODIFY_FIELDCATLOG_DATA.
  "}

ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY_ALV_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_ALV_GRID_0100 .

  GS_VARIANT-REPORT = SY-REPID. "현재 프로그램.

  GV_SAVE = 'A'. "ALV의 레이아웃을 어떤식으로 저장할 것이냐.

  "*-- Build field catalog for the alv control
  CALL METHOD GR_GRID1->SET_TABLE_FOR_FIRST_DISPLAY "화면에 최초로 올려주는 메소드
                                           "그리드를 스크린에 불러옴.
    EXPORTING
      I_DEFAULT                     = ABAP_TRUE               "변형을 쓸 것인지 말 것인지.
      IS_LAYOUT                     = GS_LAYOUT             "레이아웃을 미리 설정 원하는 값만 나오게 미리 설정
      IS_VARIANT                    = GS_VARIANT
      I_SAVE                        = GV_SAVE                     "variant에 대해서 저장             책 245페이지
      IT_TOOLBAR_EXCLUDING          = GT_EXCLUDE " 기능버튼을 뺄때.
    CHANGING
      IT_FIELDCATALOG               = GT_FIELDCAT " 필드정보를 넘겨줌.
      IT_SORT                       = GT_SORT             "정렬
      IT_OUTTAB                     = GT_DATA[]        "뿌릴 데이터를 넣어줌.
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3.

  IF SY-SUBRC NE 0.
    MESSAGE E000(0K) WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_GRID_0100 .

  GS_STABLE-ROW = ABAP_TRUE. "Row
  GS_STABLE-COL = ABAP_TRUE. "column

  CALL METHOD GR_GRID1->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = GS_STABLE
      I_SOFT_REFRESH = SPACE.

  CALL METHOD CL_GUI_CFW=>FLUSH.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM GET_FIELDCATLOG_DATA . " 스트럭처의 정보를 주는 메소드.

DATA: LT_FIELDCAT TYPE KKBLO_T_FIELDCAT. "필드들의 정보를 넣을 테이블. 상세한 정보들까지 다 들고옴.
  DATA: LV_TABNAME  TYPE DD02L-TABNAME.

"  LV_TABNAME = 'GT_DATA'.

  CALL FUNCTION 'K_KKB_FIELDCAT_MERGE' "itab으로부터 Field-Catalog(kkblo Type)를득함,
                                                                      "필드의 정보들을 가지고 옴.
    EXPORTING
      I_CALLBACK_PROGRAM     = SY-REPID " SY-REPID 현재 프로그램를 전송.
                                                                " 다시 전송될 프로그램 이름을 써줌.

   "   I_TABNAME              = LV_TABNAME "프로그램내 ITAB  프로그램 내에서 선언한 테이블 네임을 적으라는 뜻.
                                           "헤더가 있는 테이블 명을 적어라. 헤더가 없는 얘를 넣으면 에러가 남.
                                            "헤더가 없는 테이블이면 스트럭쳐 명을 넣어도 무방함.
                                            "하지만 필드들을 LIKE로 선언하면 들고옴. TYPE은 못 가져옴.
                                            " 외부에 선언된 얘들 가져올때 LIKE, TYPE 둘 다 씹가능
                                            " 내부에 선언된 얘를 가져올 때 LIKE만 가능.
                                            " 직접 LIKE로 선언한 애들만 가능함. 다른 스트럭처나 테이블을 참조해서 들고오면 못 가져옴.

     I_STRUCNAME            = 'ZEDU20_EX0ST' "ABAP DIC. 정의된 STRUCTURE
                                                                "내부에서 선언한 스트럭처는 못 가져옴. 외부에서 만든 것만 가능.

      I_BYPASSING_BUFFER     = ABAP_TRUE "버퍼에 올림. 필드가 바뀌면 갱신하기 위해서
      I_INCLNAME             = SY-REPID ""인클루드 테이블이 어디에 저장되어 있는가를 알려주는것. 보통은 내 프로그램에 저장되어 있으나
                                                     "특이한 곳에 저장되어있으면 그곳의 명을 적어주면된다.
    CHANGING
      CT_FIELDCAT            = LT_FIELDCAT[]
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      OTHERS                 = 2.

  IF SY-SUBRC EQ 0.

    "-- Trasnfer LVC.
    CALL FUNCTION 'LVC_TRANSFER_FROM_KKBLO' "Field-Catalog(kkblo type)을 Field-Catalgo(Alv type)변경
      EXPORTING
        IT_FIELDCAT_KKBLO = LT_FIELDCAT[]
      IMPORTING
        ET_FIELDCAT_LVC   = GT_FIELDCAT[] "AVL 타입으로 컨버전을 하는 것..
      EXCEPTIONS
        IT_DATA_MISSING   = 1.
  ELSE.

    " Error Fieldcatalog merge!!
    MESSAGE E000 WITH 'Error Fieldcatalog merge!!'.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form MODIFY_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM MODIFY_FIELDCATLOG_DATA .

DATA:  LV_TEXT(50).
  "--- Change Fieldcat.
  LOOP AT GT_FIELDCAT INTO GS_FIELDCAT.
    CLEAR: LV_TEXT.

    "-- Change fieldcat Attribute
    CASE GS_FIELDCAT-FIELDNAME. "필드네임들이 하나씩 들어감.
      WHEN 'ZYEAR'.
        LV_TEXT = '입학년도'.
        GS_FIELDCAT-KEY = ABAP_TRUE. "키값 설정. 이미 테이블에 있으며 굳이 안해도 됨. 하지만 이 프로그램은 스트럭처를 사용해서 자동으로 안뜸.
        GS_FIELDCAT-JUST = 'C'.             "모두 fieldcat의 필드 안으로 들어오는 거임.

      WHEN 'SNO'.
        LV_TEXT = '학번'.
        GS_FIELDCAT-JUST = 'C'.
                GS_FIELDCAT-KEY = ABAP_TRUE.

       WHEN 'IMDATE'.
        LV_TEXT = '입학일'.
        GS_FIELDCAT-JUST = 'C'.


       WHEN 'SNAME'.
        LV_TEXT = '학생이름'.
        GS_FIELDCAT-JUST = 'C'. "가운데 정렬, R, ,L도 가능.
        GS_FIELDCAT-HOTSPOT = 'X'. "밑줄
        GS_FIELDCAT-EMPHASIZE = 'C600'.

      WHEN OTHERS.
        GS_FIELDCAT-NO_OUT = ABAP_TRUE. "출력 안한다. 값이 없으면 출력이 안됨.
    ENDCASE.
    "Column Optimizer  최적화
    GS_FIELDCAT-COL_OPT = ABAP_TRUE. "출력될 때 자동으로 사이즈를 맞춰주는 것

    "-- Common attribute
    IF LV_TEXT IS NOT INITIAL.
      GS_FIELDCAT-COLTEXT   = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_L = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_M = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_S = LV_TEXT.
    ENDIF.

    MODIFY GT_FIELDCAT FROM GS_FIELDCAT.
  ENDLOOP.

ENDFORM.

-----------------------------------------------------------
Extracted by Mass Download version1.5.2 - E.G.Mellodew. 1998-2019. Sap Release753
